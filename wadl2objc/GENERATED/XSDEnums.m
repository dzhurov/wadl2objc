//
//  XSDEnums.m
//
//  Generated by wadl2objc 2013.08.30 17:01:09.
//  XSD v.1.0

//  DO NOT MODIFY THIS CLASS

#import "XSDEnums.h"

@interface XSDEnums ()

@property(nonatomic, strong) NSDictionary *RoleTypeDictionary;
@property(nonatomic, strong) NSDictionary *StatusDictionary;
@property(nonatomic, strong) NSDictionary *ContactPreferencesDictionary;
@property(nonatomic, strong) NSDictionary *GenderDictionary;
@property(nonatomic, strong) NSDictionary *AlterationStatusDictionary;
@property(nonatomic, strong) NSDictionary *GarmentTypeDictionary;
@property(nonatomic, strong) NSDictionary *DayOfWeekDictionary;
@property(nonatomic, strong) NSDictionary *OrderTypeDictionary;

- (NSUInteger)enumValueForObject:(id)object enumName:(NSString*)enumName;
- (id)objectForEnumValue:(NSUInteger)enumValue enumName:(NSString*)enumName;

@end

@implementation XSDEnums

static XSDEnums *sharedInstanse = nil;

+ (XSDEnums*)sharedInstanse
{
    if ( !sharedInstanse){
        sharedInstanse = [[XSDEnums alloc] init];
    }
    return sharedInstanse;
}

- (id)init
{
    self = [super init];
    if (self) {
		_RoleTypeDictionary = @{ @(RoleTypeTAILOR) : kRoleTypeTAILORString, @(RoleTypeSTORE_ADMIN) : kRoleTypeSTORE_ADMINString, @(RoleTypeREGIONAL_ADMIN) : kRoleTypeREGIONAL_ADMINString, @(RoleTypeSYSTEM_ADMIN) : kRoleTypeSYSTEM_ADMINString };
		_StatusDictionary = @{ @(StatusSAVED) : kStatusSAVEDString, @(StatusACTIVE) : kStatusACTIVEString, @(StatusSCHEDULED) : kStatusSCHEDULEDString, @(StatusCOMPLETED) : kStatusCOMPLETEDString, @(StatusPICKED_UP) : kStatusPICKED_UPString, @(StatusDELETED) : kStatusDELETEDString };
		_ContactPreferencesDictionary = @{ @(ContactPreferencesPHONE) : kContactPreferencesPHONEString, @(ContactPreferencesEMAIL) : kContactPreferencesEMAILString, @(ContactPreferencesNONE) : kContactPreferencesNONEString };
		_GenderDictionary = @{ @(GenderMAN) : kGenderMANString, @(GenderFEMALE) : kGenderFEMALEString };
		_AlterationStatusDictionary = @{ @(AlterationStatusDELETED) : kAlterationStatusDELETEDString, @(AlterationStatusNEW) : kAlterationStatusNEWString, @(AlterationStatusPAID) : kAlterationStatusPAIDString, @(AlterationStatusPAIDFREE) : kAlterationStatusPAIDFREEString, @(AlterationStatusCOMPLETE) : kAlterationStatusCOMPLETEString, @(AlterationStatusVOID) : kAlterationStatusVOIDString };
		_GarmentTypeDictionary = @{ @(GarmentTypeCOAT) : kGarmentTypeCOATString, @(GarmentTypePANTS) : kGarmentTypePANTSString, @(GarmentTypeVEST) : kGarmentTypeVESTString, @(GarmentTypeSHIRT) : kGarmentTypeSHIRTString, @(GarmentTypeOVERCOAT) : kGarmentTypeOVERCOATString, @(GarmentTypeLEATHER) : kGarmentTypeLEATHERString, @(GarmentTypeSHORTS) : kGarmentTypeSHORTSString, @(GarmentTypeSKIRT) : kGarmentTypeSKIRTString, @(GarmentTypeSKORT) : kGarmentTypeSKORTString, @(GarmentTypeDRESS) : kGarmentTypeDRESSString };
		_DayOfWeekDictionary = @{ @(DayOfWeekSUNDAY) : kDayOfWeekSUNDAYString, @(DayOfWeekMONDAY) : kDayOfWeekMONDAYString, @(DayOfWeekTUESDAY) : kDayOfWeekTUESDAYString, @(DayOfWeekWEDNESDAY) : kDayOfWeekWEDNESDAYString, @(DayOfWeekTHURSDAY) : kDayOfWeekTHURSDAYString, @(DayOfWeekFRIDAY) : kDayOfWeekFRIDAYString, @(DayOfWeekSATURDAY) : kDayOfWeekSATURDAYString };
		_OrderTypeDictionary = @{ @(OrderTypeNORMAL) : kOrderTypeNORMALString, @(OrderTypeRFA) : kOrderTypeRFAString };

    }
    return self;
}

- (NSDictionary*)dictionaryForEnumName:(NSString*)enumName
{
    NSString *dictKey = [enumName stringByAppendingString:@"Dictionary"];
    NSDictionary *enumDict = [self valueForKey: dictKey];
    return enumDict;
}

- (NSUInteger)enumValueForObject:(id)object enumName:(NSString*)enumName
{
    NSArray *keys = [[self dictionaryForEnumName:enumName] allKeysForObject:object];
    NSUInteger result = 0;
    if ( keys.count ){
        result = [keys[0] unsignedIntegerValue];
    }
    return result;
}

- (id)objectForEnumValue:(NSUInteger)enumValue enumName:(NSString *)enumName
{
    id result = [[self dictionaryForEnumName:enumName] objectForKey:@(enumValue)];
    return result;
}

+ (NSUInteger)enumValueForObject:(id)object enumName:(NSString *)enumName
{
    return [[XSDEnums sharedInstanse] enumValueForObject:object enumName:enumName];
}

+ (id)objectForEnumValue:(NSUInteger)enumValue enumName:(NSString *)enumName
{
    return [[self sharedInstanse] objectForEnumValue:enumValue enumName:enumName];
}

@end
